/*
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%            :+syhddddhys+:`                %            ``.:////:-.`            `.::////:.``        .-----------.``    `----`         `.---.  `------------..``      .---.         `.-:////:-.`        .---.         .---.  `.----------------.
%        `:ymMMMMMMMMMMMMMMMMms:            %          ./sdmNNNNNNmds/.       .:sdmNNNNNNNmds/`     `oNNNNNNmmmmmmdy/.  .smmmh:       .ymmNh-  :mNNNNNNmmmmmmmds:`   `+NNNo`     `-ohmNNNNMNNNmyo-     `oNNmo        `+NNNo  -hNmNNNNNNNNNNNmNNs`
%      .sNMMMMNhs+/::::/osdNMMMMNo.         %        `/dNMNmdysyhdNMMNh:     :hNMMNmhysyydNMMNh-    `oMMMNhhhhdmNNMMNy-  .yNMMd:`    -hNMMh-   :MMMMhhhhhddmNNMMmo`  `oMMMs`    -smMMNmhysyydNMMMm+    `oMMNy        `oMMMs  -shhhddNMMMMmddhhh+`
%    .yMMMMmo-              :sNMMMMs`       %       `+NMMm+-``  `./dMMNh-   /dMMNy:.`  ``.:yNMMN/   `oMMMh`````..+dMMMs`  `oNMMm/`  -dMMNs.    :MMMN```````.-oNMMd:  `oMMMs`   /dMMNy:.``  `.:yMMMN/   `oMMMy        `sMMMs   ``````sNMMN:``````
%   +NMMMd:     -+osyyyo+-`    /mMMMN:      %       -NMMm/         .os+/.  -hMMMo`         `oMMMN.  `oMMMy       `sMMMy`   `+mMMm+`:dMMNo`     :MMMN         :mMMm/  `oMMMs`  -hMMNo`         `oso+-   `oMMMh        .yMMMs         oNMMm-
%  sMMMN+    -yNMMMMMMMMMMNy-    oMMMM+     %      `oMMMh`                 oNMMh-           `mMMM+  `oMMMh`````.-omMMNo`     :dMMNsdMMN+`      :MMMN::::://+sdMMMh.  `oMMMs`  oNMMh-           ``      `oMMMNoooooooosmMMMs         +NMMm-
% oMMMN-   `yMMMMdo/:-:odMMMM+    :MMMM/    %      `sMMNs                  yMMMs.            yMMMs  `oMMMNdddmmmNMMMms.       -yNMMMMm/`       :MMMMNNNNNNMMMNNdo.   `oMMMs`  sMMMs`     `osssssssss   `oMMMMMMMMMMMMMMMMMs         +mMMd.
%.MMMM:    hMMMN:        oMMMN.    +MMMN`   %      `sMMMy                  sMMMy.            hMMMo  `oMMMMNNNNNNNmho:`         .hMMMN:         :MMMMhyyhNMMMNs:`     `oMMMs`  sMMMy.     .dNNMMMMMMN   `oMMMNsooooooosmMMMs         /mMMd.
%oMMMd    :MMMM/                    NMMM/   %       /MMMm-         -sys/.  /mMMN/           -NMMM:  `oMMMm---....``             yMMMh.         :MMMN. ``.omMMNd/     `oMMMs`  :dMMN/      -:://yMMMm   `oMMMd`       .yMMMs         /mMMh.
%yMMMs    sMMMN`                    hMMMo   %       `yMMMd-`     `/dMMMh-  `sNMMm/`       `:mMMMy   `oMMMh                      sMMMy.         :MMMN`     -yMMMNo`   `oMMMs`  `oNMMm+.        `+MMMm   `oMMMh        `sMMMs         /mMMh.
%yMMMy    oMMMM`                    hMMMo   %        `oNMMNmsooosdNMMMh-    `sNMMNds+:-:+sdNMMMy`   `oMMMy                      sNMMs`         :MMMN       `+mMMNy.  `oMMMs`   `+mMMMds+:-:/oydNMMMN   `oMMNy        `oMMMs         /mMMh.
%+MMMm    -MMMM+          ////.    `NMMM:   %          -smMMMMMMMMMMd+`      `:yNMMMMMMMMMMMNy:     `oMMNs                      oNMMs`         :MMMN         :dMMMh- `oMMMs`     .smMMMMMMMMMMMMMho-   `oMMNs        `oMMMs         :mMMy.
%`NMMM+    sMMMMo`      `yMMMN`    sMMMd    %            `./+osoo/:.            `:+syyhhys+:`        :sso:                      :oss:`         .osso          .osso+. :sss:`       `-/syyhhyys+-`       :sso:         :sss:         .+ss/`
% :MMMM/    oMMMMNho++oyNMMMm-    oMMMN-    %
%  /MMMMy`   .smMMMMMMMMMMmo`   .hMMMN:     %
%   -mMMMNo`    .:+osso+:.    .sMMMMd.      %
%     +NMMMMh+.            -+dMMMMm/        %
%      `/dMMMMMNdysoooosydNMMMMMh/          %
%         .+ymMMMMMMMMMMMMMMmy/`            %
%             `-/+osssso+/-`                %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%##########################################################################################%
%                          Prénom_Nom            : Ayoub FILLALI                           %
%                          Projet                : Gestion Facile.cpp                      %
%                          Encadré par           : Pr.Hicham Ghennioui                     %
%                          Application           : Gestion Facile.exe                      %
%                          Langage               : C++                                     %
%                          Autre fichier         : Excel                                   %
%                          Historique            : 19/04/2020                              %
%##########################################################################################%
%##########################################################################################%
%##########################################################################################%
%       benchmark avec :                                                                   %
%                       intel core i7-3667u cpu @ 2.00ghz 2.50ghz                          %
%                       RAM :16 gb                                                         %
%                       DISKDUR:SSD                                                        %
%       benchmark donne :                                                                  %
%                   ==>	Mémoire :3,4 max                                                   %
%                   ==> Processeur : 0.2% max                                               %
%##########################################################################################%
____________________
Courte Description: |
--------------------
Application développée pour les enseignants afin de pouvoir leurs facilité l'attribution d'une note.
A partir de la saisie des notes des étudiants, cette application attribut à chacun d'eux sa note calculer automatiquement.
Il y a plusieurs extensions du fichier Excel (xls xlsx csv ...), ce code permet de gérer la liste des étudiants dans un
fichier Excel avec l’extension .csv, J’ai choisi cette extension car il est facile d'accéder aux donnes de Excel, il est
utilisé par la plupart des programmeurs càd il y a des solutions en internet aux problèmes que on peut le rencontrer.

*/

//bibliothèques utilisé
#include<iostream> //contient cin et cout
#include<fstream>    //pour ouvrir un fichier
#include<string>      //library pour la variable de chaine de caractère
#include<sstream>        //contient la fonction stringstream
#include<windows.h>        //contient la fonction gotoxy
#include<conio.h>            //contient la fonction getche
char  nomfich[20];             //fichier par defaut "global"
using namespace std;
//fonction gotoxy
void gotoxy(int x,int y){
 HANDLE hcon; hcon = GetStdHandle(STD_OUTPUT_HANDLE);
 COORD dwPos; dwPos.X = x; dwPos.Y= y;
 SetConsoleCursorPosition(hcon,dwPos); }

//*********************************************************************************************************//
//**********************************************Classe etudiant********************************************//
//*********************************************************************************************************//
class etudiant{
    private: //attribut privé
    string CNE;
	string prenom;
	string nom;
	string notecc;
	string noteTP;
	string noteCu;
	string moy;
	string delibiration;
		//methode public
	public:
void charger(etudiant *T,int *n);
int modifieretudiant(etudiant *T,int n);
void remplir_excel(etudiant *T,int n);//remplir excel a partir le tableau des etudiants
void afficher(etudiant *T,int n);
int supprimer(etudiant *T,int *n);
void ajouter(int i);
		//fonction friend
void friend test_f();
};//Fin du classe etudiant

//*************************************************charger*************************************************//
void etudiant::charger(etudiant *T,int *n)//lire ligne par ligne depuis excel;
{int i=0;
    ifstream f(nomfich);//lire le fichier
	while(!f.eof())
	{
getline(f,T[i].CNE,';');
getline(f,T[i].prenom,';');
getline(f,T[i].nom,';');
getline(f,T[i].notecc,';');
getline(f,T[i].noteTP,';');
getline(f,T[i].noteCu,';');
getline(f,T[i].moy,';');
getline(f,T[i].delibiration,'\n');
if(T[i].delibiration=="")//si j'arrive à la fin
i--;//pour na pas afficher   |   |   |  ..ext
i++;}
*n=i;//nb ligne
f.close();}
//**********************************************modifieretudiant*********************************************//
int etudiant::modifieretudiant(etudiant *T,int n)
{string N_CNE,notecc,notetp,notecu;
int test=0,choix;
	cout<<"Donner le CNE de l'‚tudiant"<<endl;
	cin>>N_CNE;
	for(int i=1 ;i<n;i++){
		if(T[i].CNE==N_CNE)
		{  cout<<"\t‚tudiant trouv‚"<<endl;
           e1:
            cout<<"Voulez vous modifiez quelle note ?:\n 1:controle continu\n 2:controle TP\n 3:controle unifi‚"<<endl;
			test=1;
			cin>>choix;
    switch(choix){
        case 1:{
            cout<<"Donner la note CC\t:";
            cin>>notecc;
          T[i].notecc=notecc;	break;
			}
        case 2:{
            cout<<"Donner la note TP\t:";
            cin>>notetp;
			T[i].noteTP=notetp;	break;
			}
        case 3:{
			cout<<"Donner la note CU"<<endl;
            cin>>notecu;
			T[i].noteCu=notecu;		break;
			}
        default :{system("cls");goto e1;}}
        //conversion de strng vers float pour faire les calculs
		stringstream CCtoF(T[i].notecc);//conversion from string to float.
		float nCC,nTP,nCU,nFI; //n==>note float
	    CCtoF>>nCC;
	    stringstream TPtoF(T[i].noteTP);
        TPtoF>>nTP;//conversion from string to float .
	    stringstream CUtoF(T[i].noteCu);
        CUtoF>>nCU;//conversion from string to float .
       	nFI=nCC*0.25+nTP*0.25+nCU*0.5;//calcul moyenne
        //calcule du note final et le reconvertir vers string pour l'enregistrer
        stringstream sFI; //s ==> note String
        sFI << nFI;
        string str = sFI.str();//2str
        T[i].moy=str;
		if(nFI>=10)
		T[i].delibiration="Valid‚";
		else
		T[i].delibiration="Rattrapage";
		}
	if(test==1) return 1; //tout ça marche
	}
	return 0;
}

//**********************************************remplir_exel*********************************************//
void etudiant::remplir_excel(etudiant *T,int n){//remplir excel a partir le tableau des etudiants
	ofstream f(nomfich);
	for(int i=0;i<n;i++)
	f<<T[i].CNE<<';'<<T[i].prenom<<';'<<T[i].nom<<';'<<T[i].notecc<<';'<<T[i].noteTP<<';'<<T[i].noteCu<<';'<<T[i].moy<<';'<<T[i].delibiration<<endl;
f.close();}

//**********************************************ajouter**************************************************//
void etudiant::ajouter(int i)//fonction ajouter etudiant à l'excel
{
string cne,prenom,nom,notecc,notetp,notecu,notef;
float ncc,ntp,ncu,moy;
	ofstream f(nomfich,ios::app);//append (ajouter sans écraser),
    cout<<"Donner le CNE de l'‚tudiant (" <<i+1<<") … ajouter :\t";  cin>>cne;
	cout<<"Donner le prenom de l'‚tudiant (" <<i+1<<") … ajouter\t:";cin>>prenom;
	cout<<"Donner le nom de l'‚tudiant (" <<i+1<<") … ajouter\t :";  cin>>nom;
	cout<<"Donner la note CC\t:";   cin>>notecc;
    cout<<"Donner la note TP\t:";   cin>>notetp;
	cout<<"Donner la note CU \t:";  cin>>notecu;
//conversion String to Float
	stringstream scc(notecc);   scc>>ncc;
	stringstream stp(notetp);   stp>>ntp;
    stringstream scu(notecu);   scu>>ncu;
	moy=0.25*ncc+0.25*ntp+0.5*ncu;
	if(moy>=10)  f<<cne<<";"<<prenom<<";"<<nom<<";"<<notecc<<";"<<notetp<<";"<<notecu<<";"<<moy<<';'<<"valid‚"<<endl;
	else         f<<cne<<";"<<prenom<<";"<<nom<<";"<<notecc<<";"<<notetp<<";"<<notecu<<";"<<moy<<';'<<"Ratrrapage"<<endl;
    f.close();
}
//**********************************************supprimer*********************************************//
int etudiant::supprimer(etudiant *T,int *n)
{   string Cne;
cout<<"Entrer le CNE de l'‚tudiant … suprimer"<<endl;
cin>>Cne;
	for(int i=0;i<*n;i++)
	{
		if(T[i].CNE==Cne)
		{
			if(i==(*n)-1) //si l'étudiant ce trouve dans le dernier ligne
			{(*n)=(*n)-1;
			 return 0;}
			//sinon
			for(int j=i;j<*n-1;j++)
			{T[j]=T[j+1];}
			 (*n)=(*n)-1;
			 return 0;
        }
	}
	return 1;
}
//*********************************************afficher*********************************************//
void etudiant::afficher(etudiant *T,int n)
{    float maxN,minN;

stringstream Moy(T[1].moy);//conversion from string to float.

		int valid=0,nonvalid=0;float moyN=0;
		float moy;Moy>>moy;maxN=moy , minN=moy;

	for(int i=0;i<n;i++)
	{
		cout<<"=> "<<T[i].CNE<<"\t|"<<T[i].prenom<<"\t|"<<T[i].nom<<"\t|"<<T[i].notecc<<"\t|"<<T[i].noteTP<<"\t|"<<T[i].noteCu<<"\t|"<<T[i].moy<<"\t|"<<T[i].delibiration<<"\n"<<endl;

		//max,min
        stringstream Moy(T[i].moy);//conversion from string to float.
		float moy;
	    Moy>>moy;
        maxN=(moy>maxN&&i!=0)?moy : maxN;
        minN=(minN>moy&&i!=0)?moy : minN;
        //note moyen du classe
        moyN+=moy;
        //V et R
        if(moy >= 10 ) valid++; else if(i!=0)nonvalid++;

	}
    cout<<"\n\nNombre total d'‚tudiants : "<<n-1<<endl;
    cout<<"\nIl y a "<<valid<< " ‚tudiants valid‚s\t        ("<<(float(valid)/(n-1)*100)<<"%)"<<endl;
    cout<<"Il y a "<<nonvalid<<" ‚tudiants rattrapages\t        ("<<(float(nonvalid)/(n-1)*100)<<"%)"<<endl;
	cout<<"la note Max    ==>  "<<maxN<<endl;
    cout<<"la note Min    ==>  "<<minN<<endl;
    cout<<"la note Moyen  ==>  "<<moyN/(n-1)<<endl;

}
//______________________________________________________________________________________________________
//*********************************************annimation*********************************************//
void annimation(string chaine)
{
	for(int i=0;i<chaine.length();i++)
	{
		cout<<chaine[i];
		Sleep(10);
	}
	cout<<endl;
}
//***************************************************by*************************************************//
void by(){
system("cls");
gotoxy(30,25);
annimation("           ^^   ^^ GOOD BYE ^^   ^ ^          ");
        for(int i=0;i<5;i++){system("color 0F");Sleep(500);system("color 04");Sleep(500);}
		cout<<"\n\n\n\n\n\n\n\n\n\n";
        system("cls");
cout << "  _______   ______    ______   _______       .______  ____    ____ _______ "<<endl;
cout << " /  _____| /  __  \\  /  __  \\ |       \\      |   _  \\ \\   \\  /   /|   ____|"<<endl;
cout << "|  |  __  |  |  |  ||  |  |  ||  .--.  |     |  |_)  | \\   \\/   / |  |__   "<<endl;
cout << "|  | |_ | |  |  |  ||  |  |  ||  |  |  |     |   _  <   \\_    _/  |   __|  "<<endl;
cout << "|  |__| | |  `--'  ||  `--'  ||  '--'  |     |  |_)  |    |  |    |  |____ "<<endl;
cout << " \\______|  \\______/  \\______/ |_______/      |______/     |__|    |_______|"<<endl;
cout << ""<<endl;
exit(1);
}


//************************************************menuColor***********************************************//
string C[4];
void menuColor(){
C[3]="Color ";
cout<<"Choisissez un Couleur (tapez le meme num deux fois pour sauter): "<<endl;Sleep(300);
annimation(" --------------------------------------");
cout<<"|0 = Noir            8 = Gris          |"<<endl;Sleep(100);
cout<<"|1 = Bleu            9 = Bleu clair    |"<<endl;Sleep(100);
cout<<"|2 = Vert            A = Vert clair    |"<<endl;Sleep(100);
cout<<"|3 = Bleu-gris       B = Cyan          |"<<endl;Sleep(100);
cout<<"|4 = Rouge           C = Rouge clair   |"<<endl;Sleep(100);
cout<<"|5 = Violet          D = Violet clair  |"<<endl;Sleep(100);
cout<<"|6 = Jaune           E = Jaune clair   |"<<endl;Sleep(100);
cout<<"|7 = Blanc           F = Blanc brillant|"<<endl;Sleep(100);
annimation(" --------------------------------------");
Sleep(100);
cout <<"donner le couleur d'‚criture"<<endl;
cin>>C[1];
cout <<"donner le couleur de fond"<<endl;
cin>>C[2];
C[3]+=C[2];
C[3]+=C[1];
system(C[3].c_str());
}
//************************************************menu***********************************************//
void menu(){
cout << ".______   __  _______ .__   __.____    ____ _______ .__   __. __    __  _______ "<<endl;
cout << "|   _  \\ |  ||   ____||  \\ |  |\\   \\  /   /|   ____||  \\ |  ||  |  |  ||   ____|"<<endl;
cout << "|  |_)  ||  ||  |__   |   \\|  | \\   \\/   / |  |__   |   \\|  ||  |  |  ||  |__   "<<endl;
cout << "|   _  < |  ||   __|  |  . `  |  \\      /  |   __|  |  . `  ||  |  |  ||   __|  "<<endl;
cout << "|  |_)  ||  ||  |____ |  |\\   |   \\    /   |  |____ |  |\\   ||  `--'  ||  |____      _"<<endl;
cout << "|______/ |__||_______||__| \\__|    \\__/    |_______||__| \\__| \\______/ |_______|    |_| "<<endl;
cout << ""<<endl;
cout<<"Mr. ";system("echo %USERNAME%");
annimation("---------------------------Bienvenue dans l'int‚rface de g‚stion des ‚tudiants--------------------------");
cout<<"\n"<<endl;
annimation("Entrer le num‚ro d'op‚ration  :");
	annimation(" ----------------------------------------------------------");
	cout<<"|\t1 ==> Ajouter des  ‚tudiants                       |"<<endl;
	Sleep(200);
	cout<<"|\t2 ==> Modifier des ‚tudiants                       | "<<endl;
	Sleep(200);
    	cout<<"|\t3 ==> Supprimer un ‚tudiant                        | "<<endl;
	Sleep(200);
	cout<<"|\t4 ==> Afficher les ‚tudiants                       | "<<endl;
	Sleep(200);
	cout<<"|\tm ==> Menu Couleur                                 | "<<endl;
	Sleep(200);
	cout<<"|\t0 ==> Sortir                                       | "<<endl;
	annimation(" ----------------------------------------------------------");
gotoxy(61,40);
annimation("Programme :");
gotoxy(72,42);
annimation("R‚alis‚ par :Ayoub FILLALI");
gotoxy(72,43);
annimation("Encadr‚ par :Mr Hicham ELGHENNIOUI");
}
void test_f(){
retest:
    ifstream f(nomfich);
    cout<<"Verification ";Sleep(1000);cout<<".";Sleep(1000);cout<<".";Sleep(1000);cout<<".  "; Sleep(1500);
	if(!f.is_open()){
	    cout<<"‚chec"<<endl;
        for(int i=0;i<3;i++){system("color 0F");Sleep(500);system("color 04");Sleep(500);}
		cout<<"Le fichier n'est pas ouvert correctement"<<endl;Sleep(2000);system("cls");
		cout<<"R‚essayer : y/n"<<endl;
		if(getche()=='n') by();
		system("cls");
        system(C[3].c_str());
		cout<<"\nEntrer d'abord le nom de fichier excel avec l'‚xtention \".csv:\"\t";
		cin>>nomfich;
		goto retest;}
	else{
    cout<<"R‚ussie"<<endl;Sleep(1500);
    string ID,prenom,nom,moyenne;}
}


/////////::::::::::::::::::::::::::::::://///////////////////////////////////////
int main()
{int n; etudiant *T; char c;//c==>choix
//    ______________________
//   |  n  |nombre de ligne |
//   |	c  |le choix        |
//   |_____|________________|
system("mode 160,46");system("color A1");//by();
cout << ".______   __  _______ .__   __.____    ____ _______ .__   __. __    __  _______ "<<endl;
cout << "|   _  \\ |  ||   ____||  \\ |  |\\   \\  /   /|   ____||  \\ |  ||  |  |  ||   ____|"<<endl;
cout << "|  |_)  ||  ||  |__   |   \\|  | \\   \\/   / |  |__   |   \\|  ||  |  |  ||  |__   "<<endl;
cout << "|   _  < |  ||   __|  |  . `  |  \\      /  |   __|  |  . `  ||  |  |  ||   __|  "<<endl;
cout << "|  |_)  ||  ||  |____ |  |\\   |   \\    /   |  |____ |  |\\   ||  `--'  ||  |____      _"<<endl;
cout << "|______/ |__||_______||__| \\__|    \\__/    |_______||__| \\__| \\______/ |_______|    |_| "<<endl;
cout << ""<<endl;
menuColor();
system("cls");
system("dir *.csv");
cout<<"\nEntrer d'abord le nom de fichier excel avec l'‚xtention \".csv:\"\t";
cin>>nomfich;test_f();//faire un test de fichier
do{
Debut:
  system("cls");
  cout<<"\n\n"<<endl;
  menu();
	cin>>c;
	switch(c)
	{
		case '1':{//ajouter
			system("cls");
			cout<<"\tDonner le nombre des ‚tudiants … ajouter"<<endl;
			int no;
			cin>>no;
			for(int i=0;i<no;i++)
			T->ajouter(i);break;}

		case '2'://modifié
			{n=0;system("cls");
            T=new etudiant[100];
			T->charger(T,&n)	;
			int k=T->modifieretudiant(T,n);
			if(k==1)//si le tableau bien changer
			T->remplir_excel(T,n);
			else
			cout<<"n'exist pas"<<endl;
			delete[]T;break;}

            case '3'://supprimer
                {n=0;
            system("cls");
		    T=new etudiant[100];
		 	T->charger(T,&n);
		 	if(! T->supprimer(T,&n)) //étudiant est supprimé
		 	{ T->remplir_excel(T,n);
		 	  cout<<" L'‚tudiant a ‚t‚ supprim‚"<<endl;
			 }
			 else
			 cout<<"Cet ‚tudiant est introuvable"<<endl;
			 delete[] T;break;
                }

            case '4'://afficher
	    		{n=0;system("cls");
	    		T=new etudiant[100];
                T->charger(T,&n);
                T->	afficher(T,n);
                delete[] T;
				break;
				}

            case 'm'://menu
                {	system("cls");
                    menuColor();
                    goto Debut;
                }

       	case '0':{by();}
		default:{
			cout<<"Erreur entrer un autre nombre valide"<<endl;
            Sleep(2000);
			goto Debut;
		}}
        system("pause -> NUL");

        system("cls");
		cout<<"\nEntrer: \n\t 'h'==> Pour retourner … la fen‚tre principale \" menu \". \n\t '0'==>Pour sortir."<<endl;
		cin>>c;
		if(c!='h'){	by();}
		}while(c=='h');


   }


